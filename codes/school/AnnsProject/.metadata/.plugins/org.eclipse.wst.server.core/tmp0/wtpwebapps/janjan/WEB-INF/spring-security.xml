<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/security
	http://www.springframework.org/schema/security/spring-security-3.2.xsd">

	<!-- enable use-expressions -->
	<http auto-config="true" use-expressions="true">
       <!-- this is for session timeout handler i dont know -->
       <!-- 
   <custom-filter position="CONCURRENT_SESSION_FILTER" ref="concurrencyFilter" />
   <session-management session-authentication-strategy-ref="sas"/>
     -->
     
     
  <!-- <session-management invalid-session-url="/invalid-session" session-fixation-protection="migrateSession"> -->
  <!-- <session-management session-fixation-protection="migrateSession"> -->
  
  <!--     <concurrency-control expired-url="/expired-session" max-sessions="1" error-if-maximum-exceeded="true" /> -->
  <!-- </session-management> -->

		<headers>
			<cache-control />
		</headers>

		<intercept-url pattern="/admin**" access="hasRole('ROLE_ADMIN')" />
		<!-- redirect to 403 access denied <intercept-url pattern="/update**" access="hasRole('ROLE_ADMIN') 
			and isFullyAuthenticated()" /> -->

    <!-- authentication-failure-handler-ref="authenticationFailureHandler"  -->
    <!-- authentication-failure-url="/login?error" -->
    <!-- authentication-failure-url="/login_err" -->
		<form-login login-page="/login" 
		    default-target-url="/welcome"
			authentication-failure-handler-ref="authenticationFailureHandler"
			username-parameter="username"
			password-parameter="password" 
			login-processing-url="/auth/login_check"
			authentication-success-handler-ref="authenticationSuccessHandler"/>

		<!-- <logout logout-success-url="/login?logout" delete-cookies="JSESSIONID" /> -->
		<!-- <logout logout-url="/j_spring_security_logout" success-handler-ref="logoutSuccessHandler" delete-cookies="JSESSIONID"/> -->
		<logout logout-success-url="/home" delete-cookies="JSESSIONID" />
		<!-- enable csrf protection -->
		<!-- <csrf /> -->

		<remember-me 
		    token-validity-seconds="1209600"
		    remember-me-parameter="remember-me"
			data-source-ref="dataSource" />

	</http>

	<!-- Select users and user_roles from database -->
	<!-- users-by-username-query="select username,password, enabled from users where username=?" -->
	<authentication-manager>
		<authentication-provider>
			<jdbc-user-service data-source-ref="dataSource"
				users-by-username-query="select username,password, enabled from TB_USERS where username=?"
				authorities-by-username-query="SELECT u.username,r.role FROM TB_USERS u LEFT OUTER JOIN TB_ROLES r ON u.id = r.user_id WHERE u.username = ?"/>
		</authentication-provider>
	</authentication-manager>

	<beans:bean id="authenticationSuccessHandler" class="org.springframework.security.web.authentication.SavedRequestAwareAuthenticationSuccessHandler">
    <!-- After login, return to the last visited page -->
    <beans:property name="useReferer" value="true" />
 </beans:bean>
 
 <beans:bean id="authenticationFailureHandler" class="com.kashu.auth.handler.CustomAuthenticationFailureHandler"/>
	
	<beans:bean id="logoutSuccessHandler" class="org.springframework.security.web.authentication.logout.SimpleUrlLogoutSuccessHandler">
    <beans:property name="useReferer" value="true"/>
  </beans:bean>
  
  <!-- these settings below seems like for spring security 4.x so I commented these -->
  <!-- 
  <beans:bean id="concurrencyFilter"
      class="org.springframework.security.web.session.ConcurrentSessionFilter">
    <beans:property name="sessionRegistry" ref="sessionRegistry" />
    <beans:property name="expiredUrl" value="/session-expired.htm" />
  </beans:bean>
  	
  <beans:bean id="sas"
      class="org.springframework.security.web.authentication.session.ConcurrentSessionControlStrategy">
    <beans:constructor-arg name="sessionRegistry" ref="sessionRegistry" />
    <beans:property name="maximumSessions" value="1" />
  </beans:bean>

  <beans:bean id="sessionRegistry" class="org.springframework.security.core.session.SessionRegistryImpl" />
  -->
</beans:beans>