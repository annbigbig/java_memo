/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.23
 * Generated at: 2015-07-25 05:20:53 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.pages.users;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class register_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(4);
    _jspx_dependants.put("/WEB-INF/lib/spring-webmvc-4.1.7.RELEASE.jar", Long.valueOf(1436872323000L));
    _jspx_dependants.put("jar:file:/home/anntony/java_memo/codes/school/AnnsProject/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/janjan/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153356282000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1436970647000L));
    _jspx_dependants.put("jar:file:/home/anntony/java_memo/codes/school/AnnsProject/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/janjan/WEB-INF/lib/spring-webmvc-4.1.7.RELEASE.jar!/META-INF/spring.tld", Long.valueOf(1435628828000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005furl_0026_005fvar_005fvalue_005fnobody;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fimport_0026_005furl_005fnobody;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005furl_0026_005fvar_005fvalue_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fimport_0026_005furl_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005furl_0026_005fvar_005fvalue_005fnobody.release();
    _005fjspx_005ftagPool_005fc_005fimport_0026_005furl_005fnobody.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("  ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../fragments/staticFiles.jsp", out, false);
      out.write("\n");
      out.write("<script>\n");
      out.write("$(function() {\n");
      out.write("\t\n");
      out.write("\t//initialize the datepicker for birthday field\n");
      out.write("    $(\"#datepicker\").datepicker({\n");
      out.write("    \tchangeYear: true,\n");
      out.write("    \tchangeMonth: true,\n");
      out.write("    \tminDate: \"-100y\",\n");
      out.write("    \tmaxDate: \"-18y\",\n");
      out.write("    \tyearRange: \"c-20:c+20\",\n");
      out.write("    \tdateFormat: \"yy-mm-dd\",\n");
      out.write("    }).datepicker('setDate',new Date()).attr('readonly',true);\n");
      out.write("    \n");
      out.write("    //initialize the zipcode selector\n");
      out.write("    $(\"#twzipcode\").twzipcode({\n");
      out.write("    \t  language: 'lang/zh-tw',\n");
      out.write("    \t  readonly: true,\n");
      out.write("    \t  onDistrictSelect: function(){\n");
      out.write("    \t\t    var data = $(\"input[name*='zipcode']\").val();\n");
      out.write("    \t\t    //$(\"#zipcode\").val(data);\n");
      out.write("    \t\t    console.log(data);\n");
      out.write("    \t         }\n");
      out.write("    \t   });\n");
      out.write("    \n");
      out.write("    //this is for jquery-mask-plugin\n");
      out.write("    $(\"#telephone\").mask(\"(00)0000-0000\");\n");
      out.write("    $(\"#mobile\").mask(\"0000-000-000\");\n");
      out.write("    $(\"#regform\").validate({\n");
      out.write("    \t    rules:{\n");
      out.write("    \t    \t        username: {\n");
      out.write("    \t    \t        \t    required: true,\n");
      out.write("    \t    \t        \t    minlength: 6,\n");
      out.write("    \t    \t        \t    maxlength: 14\n");
      out.write("    \t    \t                              },\n");
      out.write("    \t    \t        password: {\n");
      out.write("    \t    \t        \t    required: true,\n");
      out.write("    \t    \t        \t    minlength: 6,\n");
      out.write("    \t    \t        \t    maxlength: 14\n");
      out.write("    \t    \t                             },\n");
      out.write("    \t    \t        cpassword: {\n");
      out.write("    \t    \t        \t    required: true,\n");
      out.write("    \t    \t        \t    minlength: 6,\n");
      out.write("    \t    \t        \t    maxlength: 14,\n");
      out.write("    \t    \t        \t    equalTo: \"#password\"\n");
      out.write("    \t    \t                             },\n");
      out.write("    \t    \t        email: {\n");
      out.write("    \t    \t        \t    required: true,\n");
      out.write("    \t    \t        \t    email: true\n");
      out.write("    \t    \t                             }\n");
      out.write("    \t              },\n");
      out.write("    \t    messages:{\n");
      out.write("    \t    \t        username: {\n");
      out.write("    \t                 required: \"帳號名稱不得為空\",\n");
      out.write("    \t                 minlength: \"帳號的長度至少需6個字元\",\n");
      out.write("    \t                 maxlength: \"帳號的長度最多是14個字元\"\n");
      out.write("    \t    \t                             },\n");
      out.write("    \t    \t        password: {\n");
      out.write("    \t    \t        \t   required: \"密碼不得為空\",\n");
      out.write("    \t    \t        \t   minlength: \"密碼的長度至少需6個字元\",\n");
      out.write("    \t    \t        \t   maxlength: \"密碼的長度最多是14個字元\"\n");
      out.write("    \t    \t                             }\n");
      out.write("    \t              },\n");
      out.write("    \t    highlight:function(element){\n");
      out.write("    \t    \t     $(element).addClass('validation-error');\n");
      out.write("    \t               },\n");
      out.write("    \t    unhighlight:function(element){\n");
      out.write("    \t         $(element).removeClass('validation-error');\n");
      out.write("    \t               },\n");
      out.write("    \t    errorElement: \"div\",\n");
      out.write("    \t    errorPlacement: function(error, element){\n");
      out.write("    \t    \t     error.appendTo(\"div#validation-errors\");\n");
      out.write("    \t              }\n");
      out.write("    \t      });\n");
      out.write(" \n");
      out.write("  });\n");
      out.write("</script>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("\n");
      out.write(" <header>header</header>\n");
      out.write(" <div id='main'>\n");
      out.write("    <article>\n");
      out.write("    <div id=\"container\">\n");
      out.write("    <form id=\"regform\"> \n");
      out.write("    <div id=\"left\">\n");
      out.write("    \n");
      out.write("    \t\t<h2 class=\"contact\">註冊為新用戶</h2>\n");
      out.write("    \t\t\n");
      out.write("    \t\t <p></p>\n");
      out.write("    \t\t\t<label for=\"username\">帳號名稱</label>\n");
      out.write("    \t\t\t<br/>\n");
      out.write("    \t\t\t<input id=\"username\" name=\"username\" placeholder=\"請輸入要申請的帳號名稱\" type=\"text\" maxlength=\"14\">\n");
      out.write("    \t\t\t<br/>\n");
      out.write("    \t\t <p></p> \n");
      out.write("    \t\t\t\n");
      out.write("    \t\t <p></p>\n");
      out.write("    \t\t\t<label for=\"password\">密碼</label>\n");
      out.write("    \t\t\t<br/>\n");
      out.write("    \t\t\t<input id=\"password\" name=\"password\" placeholder=\"請輸入您設定的密碼\" type=\"password\" maxlength=\"14\">\n");
      out.write("    \t\t <p></p>\n");
      out.write("    \t\t \n");
      out.write("    \t\t <p></p>\n");
      out.write("    \t\t\t<label for=\"cpassword\">確認密碼</label>\n");
      out.write("    \t\t\t<br/>\n");
      out.write("    \t\t\t<input id=\"cpassword\" name=\"cpassword\" placeholder=\"請再次輸入您設定的密碼\" type=\"password\" maxlength=\"14\">\n");
      out.write("    \t\t <p></p>\n");
      out.write("    \t\t \n");
      out.write("    \t\t <p></p>\n");
      out.write("    \t\t\t<label for=\"email\">E-Mail</label>\n");
      out.write("    \t\t\t<br/>\n");
      out.write("    \t\t\t<input id=\"email\" name=\"email\" placeholder=\"your@e-mail.address\" type=\"email\" maxlength=\"30\">\n");
      out.write("    \t\t <p></p>\n");
      out.write("    \t\t\t\n");
      out.write("    \t\t\t<input name=\"submit\" id=\"submit\" value=\"註冊為新用戶\" type=\"submit\">\n");
      out.write("    \t\t\t   <br/><br/>\n");
      out.write("    \t\t\t    <div id=\"validation-errors\"></div>\n");
      out.write("    \t\t\n");
      out.write("    </div>\n");
      out.write("    <div id=\"middle\"></div>\n");
      out.write("    <div id=\"right\">\n");
      out.write("    \t\t <p></p><br/><br/><br/>\n");
      out.write("    \t\t\t<label for=\"nickname\">暱稱</label>\n");
      out.write("    \t\t\t<br/>\n");
      out.write("    \t\t\t<input id=\"nickname\" name=\"nickname\" placeholder=\"請輸入您的暱稱\" type=\"text\" maxlength=\"14\">\n");
      out.write("    \t\t <p></p>\n");
      out.write("    \t\t \n");
      out.write("    \t\t <p></p>\n");
      out.write("    \t\t\t<label for=\"realname\">真實姓名</label>\n");
      out.write("    \t\t\t<br/>\n");
      out.write("    \t\t\t<input id=\"realname\" name=\"realname\" placeholder=\"請輸入您的真實姓名\" type=\"text\" maxlength=\"20\">\n");
      out.write("    \t\t <p></p>\n");
      out.write("    \t\t \n");
      out.write("    \t\t <p></p>\n");
      out.write("    \t\t\t<label for=\"gender\">性別</label>\n");
      out.write("    \t\t\t<br/>\n");
      out.write("    \t\t\t<input type=\"radio\" name=\"gender\" value=\"1\" checked>男\n");
      out.write("    \t\t\t<input type=\"radio\" name=\"gender\" value=\"0\">女\n");
      out.write("    \t\t <p></p>\n");
      out.write("    \t\t \n");
      out.write("    \t\t <p></p>\n");
      out.write("    \t\t\t<label for=\"birthday\">生日</label>\n");
      out.write("    \t\t\t<br/>\n");
      out.write("    \t\t\t<input type=\"text\" id=\"datepicker\" name=\"birthday\">\n");
      out.write("    \t\t <p></p>\n");
      out.write("    \t\t \n");
      out.write("    \t\t <p></p>\n");
      out.write("    \t\t\t<label for=\"telephone\">市內電話</label>\n");
      out.write("    \t\t\t<br/>\n");
      out.write("    \t\t\t<input id=\"telephone\" name=\"telephone\" placeholder=\"(00)0000-0000\" type=\"text\">\n");
      out.write("    \t\t <p></p>\n");
      out.write("    \t\t \n");
      out.write("    \t\t <p></p>\n");
      out.write("    \t\t\t<label for=\"mobile\">行動電話</label>\n");
      out.write("    \t\t\t<br/>\n");
      out.write("    \t\t\t<input id=\"mobile\" name=\"mobile\" placeholder=\"0000-000-000\" type=\"text\">\n");
      out.write("    \t\t <p></p>\n");
      out.write("    \t\t \n");
      out.write("    \t\t <p></p>\n");
      out.write("    \t\t <label for=\"zipcode\">郵遞區號</label>\n");
      out.write("    \t\t <br/>\n");
      out.write("    \t\t <div id=\"twzipcode\"></div>\n");
      out.write("    \t\t <p></p>\n");
      out.write("    \t\t \n");
      out.write("    \t\t <p></p>\n");
      out.write("    \t\t\t<label for=\"address\">收件地址</label>\n");
      out.write("    \t\t\t<br/>\n");
      out.write("    \t\t\t<input id=\"address\" name=\"address\" placeholder=\"請輸入您的收件地址\" type=\"text\" maxlength=\"70\">\n");
      out.write("    \t\t <p></p>\n");
      out.write("    \t\t \n");
      out.write("    </div>\n");
      out.write("    </form> \n");
      out.write("    </div>\n");
      out.write("\t\t\n");
      out.write("    </article>\n");
      out.write("    \n");
      out.write("    <nav>\n");
      out.write("          ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../login.jsp", out, false);
      out.write("\n");
      out.write("    </nav>\n");
      out.write("    \n");
      out.write("    <aside>aside<br>\n");
      out.write("    <h2></h2>\n");
      out.write("    ");
      if (_jspx_meth_c_005furl_005f0(_jspx_page_context))
        return;
      out.write("\n");
      out.write("    <h2>");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${part}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</h2>\n");
      out.write("    ");
      if (_jspx_meth_c_005fimport_005f0(_jspx_page_context))
        return;
      out.write("\n");
      out.write("    </aside>\n");
      out.write("    \n");
      out.write(" </div>\n");
      out.write(" <footer>footer</footer>\n");
      out.write("\n");
      out.write("\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005furl_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:url
    org.apache.taglibs.standard.tag.rt.core.UrlTag _jspx_th_c_005furl_005f0 = (org.apache.taglibs.standard.tag.rt.core.UrlTag) _005fjspx_005ftagPool_005fc_005furl_0026_005fvar_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.UrlTag.class);
    _jspx_th_c_005furl_005f0.setPageContext(_jspx_page_context);
    _jspx_th_c_005furl_005f0.setParent(null);
    // /WEB-INF/pages/users/register.jsp(189,4) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005furl_005f0.setVar("part");
    // /WEB-INF/pages/users/register.jsp(189,4) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005furl_005f0.setValue("/part");
    int _jspx_eval_c_005furl_005f0 = _jspx_th_c_005furl_005f0.doStartTag();
    if (_jspx_th_c_005furl_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005fc_005furl_0026_005fvar_005fvalue_005fnobody.reuse(_jspx_th_c_005furl_005f0);
      return true;
    }
    _005fjspx_005ftagPool_005fc_005furl_0026_005fvar_005fvalue_005fnobody.reuse(_jspx_th_c_005furl_005f0);
    return false;
  }

  private boolean _jspx_meth_c_005fimport_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:import
    org.apache.taglibs.standard.tag.rt.core.ImportTag _jspx_th_c_005fimport_005f0 = (org.apache.taglibs.standard.tag.rt.core.ImportTag) _005fjspx_005ftagPool_005fc_005fimport_0026_005furl_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.ImportTag.class);
    _jspx_th_c_005fimport_005f0.setPageContext(_jspx_page_context);
    _jspx_th_c_005fimport_005f0.setParent(null);
    // /WEB-INF/pages/users/register.jsp(191,4) name = url type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fimport_005f0.setUrl("/part");
    int[] _jspx_push_body_count_c_005fimport_005f0 = new int[] { 0 };
    try {
      int _jspx_eval_c_005fimport_005f0 = _jspx_th_c_005fimport_005f0.doStartTag();
      if (_jspx_th_c_005fimport_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
    } catch (java.lang.Throwable _jspx_exception) {
      while (_jspx_push_body_count_c_005fimport_005f0[0]-- > 0)
        out = _jspx_page_context.popBody();
      _jspx_th_c_005fimport_005f0.doCatch(_jspx_exception);
    } finally {
      _jspx_th_c_005fimport_005f0.doFinally();
      _005fjspx_005ftagPool_005fc_005fimport_0026_005furl_005fnobody.reuse(_jspx_th_c_005fimport_005f0);
    }
    return false;
  }
}
